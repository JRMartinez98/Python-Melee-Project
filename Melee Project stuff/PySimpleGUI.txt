One-Shot Window
layout = [[sg.Text('My one-shot window.')],      
                 [sg.InputText()],      
                 [sg.Submit(), sg.Cancel()]]      

window = sg.Window('Window Title', layout)    

event, values = window.read()    
window.close()

text_input = values[0]    
sg.popup('You entered', text_input)

Persistent window that has multiple reads using an event lop and updates data in window.
layout = [[sg.Text('Your typed chars appear here:'), sg.Text(size=(12,1), key='-OUTPUT-')],
          [sg.Input(key='-IN-')],
          [sg.Button('Show'), sg.Button('Exit')]]

window = sg.Window('Window Title', layout)

while True:  # Event Loop
    event, values = window.read()
    print(event, values)
    if event == sg.WIN_CLOSED or event == 'Exit':
        break
    if event == 'Show':
        # change the "output" element to be the value of "input" element
        window['-OUTPUT-'].update(values['-IN-'])

window.close()

Example of complex window sg.ChangeLookAndFeel('GreenTan')

# ------ Menu Definition ------ #
menu_def = [['&File', ['&Open', '&Save', 'E&xit', 'Properties']],
            ['&Edit', ['Paste', ['Special', 'Normal', ], 'Undo'], ],
            ['&Help', '&About...'], ]

# ------ Column Definition ------ #
column1 = [[sg.Text('Column 1', background_color='lightblue', justification='center', size=(10, 1))],
           [sg.Spin(values=('Spin Box 1', '2', '3'), initial_value='Spin Box 1')],
           [sg.Spin(values=('Spin Box 1', '2', '3'), initial_value='Spin Box 2')],
           [sg.Spin(values=('Spin Box 1', '2', '3'), initial_value='Spin Box 3')]]

layout = [
    [sg.Menu(menu_def, tearoff=True)],
    [sg.Text('(Almost) All widgets in one Window!', size=(30, 1), justification='center', font=("Helvetica", 25), relief=sg.RELIEF_RIDGE)],
    [sg.Text('Here is some text.... and a place to enter text')],
    [sg.InputText('This is my text')],
    [sg.Frame(layout=[
    [sg.Checkbox('Checkbox', size=(10,1)),  sg.Checkbox('My second checkbox!', default=True)],
    [sg.Radio('My first Radio!', "RADIO1", default=True, size=(10,1)), sg.Radio('My second Radio!', "RADIO1")]], title='Options',title_color='red', relief=sg.RELIEF_SUNKEN, tooltip='Use these to set flags')],
    [sg.Multiline(default_text='This is the default Text should you decide not to type anything', size=(35, 3)),
     sg.Multiline(default_text='A second multi-line', size=(35, 3))],
    [sg.InputCombo(('Combobox 1', 'Combobox 2'), size=(20, 1)),
     sg.Slider(range=(1, 100), orientation='h', size=(34, 20), default_value=85)],
    [sg.InputOptionMenu(('Menu Option 1', 'Menu Option 2', 'Menu Option 3'))],
    [sg.Listbox(values=('Listbox 1', 'Listbox 2', 'Listbox 3'), size=(30, 3)),
     sg.Frame('Labelled Group',[[
     sg.Slider(range=(1, 100), orientation='v', size=(5, 20), default_value=25, tick_interval=25),
     sg.Slider(range=(1, 100), orientation='v', size=(5, 20), default_value=75),
     sg.Slider(range=(1, 100), orientation='v', size=(5, 20), default_value=10),
     sg.Column(column1, background_color='lightblue')]])],
    [sg.Text('_' * 80)],
    [sg.Text('Choose A Folder', size=(35, 1))],
    [sg.Text('Your Folder', size=(15, 1), auto_size_text=False, justification='right'),
     sg.InputText('Default Folder'), sg.FolderBrowse()],
    [sg.Submit(tooltip='Click to submit this form'), sg.Cancel()]]

window = sg.Window('Everything bagel', layout, default_element_size=(40, 1), grab_anywhere=False)
event, values = window.read()
window.close()

sg.Popup('Title',
         'The results of the window.',
         'The button clicked was "{}"'.format(event),
         'The values are', values)


Code from the Melee project that I removed. Putting in here just in case I need it for later.
# return  [ [sg.Text('Window 2')],
    #     [sg.Button(image_filename='Melee Project/Icons/Dr Mario.png', key = '-DR.MARIO-'), sg.Button(image_filename='Melee Project/Icons/Mario.png', key = '-MARIO-'),
    #     sg.Button(image_filename='Melee Project/Icons/Luigi.png', key = '-LUIGI-'), sg.Button(image_filename='Melee Project/Icons/Bowser.png', key = '-BOWSER-'),
    #     sg.Button(image_filename='Melee Project/Icons/Peach.png', key = '-PEACH-'), sg.Button(image_filename='Melee Project/Icons/Yoshi.png', key = '-YOSHI-'),
    #     sg.Button(image_filename='Melee Project/Icons/DK.png', key = '-DK-'), sg.Button(image_filename='Melee Project/Icons/Captain Falcon.png', key = '-FALCON-'),
    #     sg.Button(image_filename='Melee Project/Icons/Ganondorf.png', key = '-GANON-')], 

    #     [sg.Button(image_filename='Melee Project/Icons/Falco.png', key = '-FALCO-'), sg.Button(image_filename='Melee Project/Icons/Fox.png', key = '-FOX-'), 
    #     sg.Button(image_filename='Melee Project/Icons/Ness.png', key = '-NESS-'), sg.Button(image_filename='Melee Project/Icons/Ice Climbers.png', key = '-ICE CLIMBERS-'), 
    #     sg.Button(image_filename='Melee Project/Icons/Kirby.png', key = '-KIRBY-'), sg.Button(image_filename='Melee Project/Icons/Samus.png', key = '-SAMUS-'), 
    #     sg.Button(image_filename='Melee Project/Icons/Zelda.png', key = '-ZELDA-'), sg.Button(image_filename='Melee Project/Icons/Link.png', key = '-LINK-'), 
    #     sg.Button(image_filename='Melee Project/Icons/YoungLink.png', key = '-YOUNGLINK-')],
                    
    #     [sg.Text('            '), sg.Button(image_filename='Melee Project/Icons/Pichu.png', key = '-PICHU-'), sg.Button(image_filename='Melee Project/Icons/Pikachu.png', key = '-PIKACHU-'),
    #     sg.Button(image_filename='Melee Project/Icons/Jigglypuff.png', key = '-PUFF-'), sg.Button(image_filename='Melee Project/Icons/Mewtwo.png', key = '-MEWTWO-'),
    #     sg.Button(image_filename='Melee Project/Icons/Mr Game & Watch.png', key = '-G&W-'), sg.Button(image_filename='Melee Project/Icons/Marth.png', key = '-MARTH-'),
    #     sg.Button(image_filename='Melee Project/Icons/Roy.png', key = '-ROY-'), sg.Button(image_filename='Melee Project/Icons/Sheik.png', key = '-SHEIK-')] ]
